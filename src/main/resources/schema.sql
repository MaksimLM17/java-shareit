--DROP TABLE IF EXISTS comments, users, items, bookings;

CREATE TABLE users (
  user_id integer GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name varchar(127) NOT NULL,
  email varchar(127) NOT NULL,
  CONSTRAINT pk_user PRIMARY KEY (user_id),
  CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);

CREATE TABLE items (
  item_id integer GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name varchar(127) NOT NULL,
  description varchar(1020) NOT NULL,
  available boolean NOT NULL,
  owner_id integer NOT NULL,
  CONSTRAINT fk_item_owner FOREIGN KEY (owner_id) REFERENCES users (user_id) ON DELETE CASCADE,
  CONSTRAINT pk_item PRIMARY KEY (item_id)
);

CREATE TABLE bookings (
  id integer GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  start_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
  end_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
  item_id integer NOT NULL,
  booker_id integer NOT NULL,
  status varchar(15) NOT NULL CHECK (status IN ('WAITING', 'APPROVED', 'REJECTED', 'CANCELLED')),
  CONSTRAINT fk_booking_item FOREIGN KEY (item_id) REFERENCES items (item_id) ON DELETE CASCADE,
  CONSTRAINT fk_booking_user FOREIGN KEY (booker_id) REFERENCES users (user_id) ON DELETE CASCADE,
  CONSTRAINT pk_booking PRIMARY KEY (id)
);

CREATE TABLE comments (
  id integer GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  text varchar(1022) NOT NULL,
  item_id integer NOT NULL,
  author_id integer NOT NULL,
  created_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
  CONSTRAINT pk_comment PRIMARY KEY (id),
  CONSTRAINT fk_comment_item FOREIGN KEY (item_id) REFERENCES items (item_id) ON DELETE CASCADE,
  CONSTRAINT fk_comment_author FOREIGN KEY (author_id) REFERENCES users (user_id) ON DELETE CASCADE
);
